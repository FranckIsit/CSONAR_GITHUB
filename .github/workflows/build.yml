name: Codesonar GitHub Demo
on:
  pull_request:
env:
  PROJECT_NAME: ${{ github.event.repository.name }}
jobs:
  analyze:
  # perm required to solve "Resource not accessible by integration" warning when trying to upload SARIF
    permissions: write-all
    runs-on:
      - Debian12
    env:
      CODESONAR: /opt/codesonar/codesonar/bin/codesonar
      # JAVA_HOME needed to execute Kotlin Detekt tool
      JAVA_HOME: /opt/codesonar/win32-fetcher/jdk-11-x86_64-pc-linux-gnu
      DETEKT: /opt/codesonar/win32-fetcher/detekt-cli/bin/detekt-cli
      CSONAR_HUB_USER: "${{ secrets.CSONAR_HUB_USER }}"
      CSONAR_HUB_PASS: "${{ secrets.CSONAR_HUB_PASS }}"
      TRUSTED_CERT: "${{ secrets.TRUSTED_CERT }}"
      HUB_CERT: "${{ secrets.ROB_HUB_CERT }}"
      HUB_KEY: "${{ secrets.ROB_HUB_KEY }}"
      CSONAR_HUB_PWFILE: "codesonar.hub.pwfile"
      #CSONAR_HUB_URL: "https://partnerdemo.codesonar.com"
      CSONAR_HUB_URL: "https://duck.dyndns.org:7340"
      CSPYTHON: /opt/codesonar/codesonar/bin/cspython
      CSO_GITHUB: /opt/codesonar-github
      GITHUB_CAFILE: ".github/github.cert.pem"
      GH_TOKEN: ${{ secrets.GH_TOKEN }}
      PULL_REQUEST_ID: ${{ github.event.pull_request.number }}
      
    container:
      image: ghcr.io/rdaultongt/csonar_github:gnucompilers-codesonar8.1p0BETA
      credentials:
         username: ${{ secrets.DOCKER_USER }}
         password: ${{ secrets.DOCKER_PASS }}
    timeout-minutes: 360
    steps:
     - uses: actions/checkout@v3
     - name: Create Hub Credential File
       run: |
          echo "$CSONAR_HUB_PASS" > "$CSONAR_HUB_PWFILE"
          echo "$HUB_CERT" > hubCert
          echo "$HUB_KEY" > hubKey
          mkdir /github/home/.csurf
          mkdir /github/home/.csurf/codesonar
          echo "$TRUSTED_CERT" > /github/home/.csurf/codesonar/trusted_certs.pem
    # next line required so we can access the main branch - it wll be called remotes/origin/main
    # - run: git config --global --add safe.directory /__w/CSONAR_GITHUB/CSONAR_GITHUB
    # get the set of source files changed for the branch pushed as env var FILELIST
    # tr needed to put all results from git diff onto one space separated line
    # - run: echo $GITHUB_REF
    # - run: git branch -a
    # - run: git diff --name-only remotes/origin/main $GITHUB_REF | tr '\n' ' '
    # - run: echo "FILELIST=`git diff --name-only remotes/origin/main $GITHUB_REF | grep -v yml | tr '\n' ' ' `" >> $GITHUB_ENV
    # - run: echo FILELIST is $FILELIST
     - name: build C/C++
       run: >
          "$CODESONAR" build
          -auth certificate
          -hubcert hubCert
          -hubkey hubKey
          -project /ROB/"$PROJECT_NAME"
          "$PROJECT_NAME"
          "$CSONAR_HUB_URL"
          gcc -c -I. demo.cpp second.cpp
     - name: analyze the whole codebase + Kotlin OKHTTP sources
       run: >
           "$DETEKT" -i OKHTTP -r sarif:okhttp.sarif
     - run: >
           "$CODESONAR" analyze -auth certificate -hubcert hubCert -hubKey hubKey -project /ROB/"$PROJECT_NAME" "$PROJECT_NAME" "$CSONAR_HUB_URL" -foreground
           "$CODESONAR" import_sarif.py okhttp.sarif -analyzer detekt -include-sources OKHTTP/**/*.kt
     - name: Pull Analysis Results from CodeSonar Hub
       run: >
          "$CODESONAR" dump_warnings.py
          -o warnings.sarif
          --hub "$CSONAR_HUB_URL"
          -auth certificate
          -hubcert hubCert
          -hubkey hubKey
          --project-file "$PROJECT_NAME"
          --sarif
          --src-root "$GITHUB_WORKSPACE"
          -t 7200
     - name: Cleanup Credential File
       run: shred -u "$CSONAR_HUB_PWFILE"
     - name: Push Analysis Results to GitHub
       uses: github/codeql-action/upload-sarif@v2
       with:
          sarif_file: warnings.sarif
     - name: Push Summary Report
       if: ${{ github.event.pull_request }}
       run: >
          "$CSPYTHON" "$CSO_GITHUB/sarif_summary.py"
          warnings.sarif
          "$CSONAR_HUB_URL"
          "$PROJECT_NAME"
          | "$CSPYTHON" "$CSO_GITHUB/push_github_pr_comment.py"
          --api-url "$GITHUB_API_URL"
          --cafile "$GITHUB_CAFILE"
          "$GITHUB_REPOSITORY"
          "$PULL_REQUEST_ID"
          GH_TOKEN
